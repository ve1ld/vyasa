# Ritesh's Rough Work on Vyasa

## Root Section -- Common Utils

```elixir
defmodule R do
  def recompile() do
    Mix.Task.reenable("app.start")
    Mix.Task.reenable("compile")
    Mix.Task.reenable("compile.all")
    compilers = Mix.compilers()
    Enum.each(compilers, &Mix.Task.reenable("compile.#{&1}"))
    Mix.Task.run("compile.all")
  end
end
```

### Supports Recompilation from within Livebook

<!-- livebook:{"branch_parent_index":0} -->

## 2) Cloning Gita by Creating a Schema for it

```elixir
alias Vyasa.Written.{Source, Chapter, Verse, Translation, Transliteration, Transcript, Medium}

verse = %Verse{
  num: 77,
  body: "तच्च संस्मृत्य संस्मृत्य रूपमत्यद्भुतं हरेः।\n\nविस्मयो मे महान् राजन् हृष्यामि च पुनः पुनः।।18.77।।\n "
}

verse_2 = %Verse{
  num: 78,
  body: "तच्च संस्मृत्य संस्मृत्य रूपमत्यद्भुतं हरेः।\n\nविस्मयो मे महान् राजन् हृष्यामि च पुनः पुनः।।19.78।।\n "
}

chapter = %Chapter{num: 1, body: "Chapter 1 Body", verses: [verse, verse_2]}

source = %Source{
  title: "testTitle",
  id: Ecto.UUID.generate(),
  verses: [verse, verse_2],
  chapters: [chapter]
}

# verse = Ecto.build_assoc(source, :verses, verse)
# medium = %Medium{id: Ecto.UUID.generate()}
# transcript = %Transcript{id: Ecto.UUID.generate()}

verse_2 = %Verse{
  verse_2
  | translations: [
      %Translation{language: "Urdu", body: "Urdu translationnnnn", meaning: "meaning in urdu"}
    ]
}
```

Convert json --> struct --> using changeset --> insert into repo

```elixir
defmodule Gita do
  @root "/Users/ritesh/Projects/vyasa"
  @gita_sub_dir "#{@root}/priv/static/corpus/gita"

  @verses "#{@gita_sub_dir}/verse.json"
  @chapters "#{@gita_sub_dir}/chapters.json"

  alias Vyasa.Written.{Chapter}


  def get_source(chapters, verses) do

    %{title: "Gita", chapters: chapters, verses: verses}
    # Source.changeset(%Source{}, %{title: "Gita"})
  end


  @doc """
  example input:  17 => [
    %{
      "chapter_number" => 17,
      "chapter_summary" => "The seventeenth chapter of the Bhagavad Gita is \"Sraddhatraya Vibhaga Yoga\". In this chapter, Krishna describes the three types of faith corresponding to the three modes of the material nature. Lord Krishna further reveals that it is the nature of faith that determines the quality of life and the character of living entities. Those who have faith in passion and ignorance perform actions that yield temporary, material results while those who have faith in goodness perform actions in accordance with scriptural instructions and hence their hearts get further purified.",
      "chapter_summary_hindi" => "भगवद गीता का सत्रहवा अध्याय श्रद्धात्रयविभागयोग है। इस अध्याय में, कृष्ण भौतिक प्रकृति के तीन गुणों से संबंधित तीन प्रकार के विश्वासों का वर्णन करते हैं। भगवान कृष्ण आगे बताते हैं कि यह विश्वास की प्रकृति है जो जीवन की गुणवत्ता और जीवित संस्थाओं के चरित्र को निर्धारित करती है। जो लोग लालसा और अज्ञानता में विश्वास रखते हैं, वे ऐसे कार्य करते हैं जो कि अस्थायी और भौतिक फल देते हैं परन्तु जो लोग अच्छाई में विश्वास रखते हैं वे शास्त्रपूर्ण निर्देशों के अनुसार कार्य करते हैं और इसलिए उन्हें स्थायी और अधिक प्रवीण फल प्राप्त होते हैं जो मन को और भी शुद्ध करते हैं।        ",
      "id" => 17,
      "image_name" => "shraddha-traya-vibhaga-yoga",
      "name" => "श्रद्धात्रयविभागयोग",
      "name_meaning" => "Yoga through Discerning the Three Divisions of Faith",
      "name_translation" => "Sraddhatraya Vibhaga Yoga",
      "name_transliterated" => "Śhraddhā Traya Vibhāg Yog",
      "verses_count" => 28
    }
  """
  def create_changeset(chapter) do 
    # IO.inspect(chapter["chapter_number"])
    IO.inspect(chapter)
    %{
      "chapter_number" =>  num,
      "chapter_summary" => body, 
    } = chapter

    changeset = Chapter.changeset(%Chapter{}, %{num: num, body: body})

    changeset


    # %{chapter_number: num} = chapter
    # num
    # chapter[:chapter_number]
    # IO.inspect(chapter_val["#{chapter}"])
    # num
  end




  def get_chapters() do
    _changesets = @chapters
    |> File.read!()
    |> Jason.decode!()

    # |> Enum.group_by(& &1["chapter_number"])
    # |> Enum.take(1)
    # |> Enum.map(fn chapter -> Gita.create_changeset(chapter) end)
    # # |> Enum.map(fn {_k, v} -> Gita.create_changeset(v) end)
    # |> Enum.take(1)
  end



  @doc """
  {
    "chapter_id": 18,
    "chapter_number": 18,
    "externalId": 696,
    "id": 696,
    "text": "अर्जुन उवाचनष्टो मोहः स्मृतिर्लब्धा त्वत्प्रसादान्मयाच्युत।स्थितोऽस्मि गतसन्देहः करिष्ये वचनं तव।।18.73।।",
    "title": "Verse 696",
    "verse_number": 73,
    "verse_order": 696,
    "transliteration": "arjuna uvācha\nnaṣhṭo mohaḥ smṛitir labdhā tvat-prasādān mayāchyuta\nsthito ‘smi gata-sandehaḥ kariṣhye vachanaṁ tava\n",
    "word_meanings": "arjunaḥ uvācha—Arjun said; naṣhṭaḥ—dispelled; mohaḥ—illusion; smṛitiḥ—memory; labdhā—regained; tvat-prasādāt—by your grace; mayā—by me; achyuta—Shree Krishna, the infallible one; sthitaḥ—situated; asmi—I am; gata-sandehaḥ—free from doubts; kariṣhye—I shall act; vachanam—instructions; tava—your\n"
  },

  """

  def create_verse(verse) do
    %{
      "verse_number" => num, 
      "text" => body,
      "transliteration" => transliteration,
      "word_meanings" => meaning,
  } = verse

  
  end


  def get_verses() do 
    @verses 
    |> File.read!()
    |> Jason.decode!()
    |> Enum.map(fn verse -> create_verse(verse))
  end
end


# get all as structs, then compose them properly before creating changesets? 
verses = Gita.get_verses()
# chapters = Gita.get_chapters()
# source = Gita.get_source(chapters, verses)
# source_changeset = Gita.get_source()
# chapter_changesets = Gita.get_chapters()


```

<!-- livebook:{"branch_parent_index":0} -->

## 1) Understanding the Schema

#### Session Creation

```elixir
## ref to schema @ lib/vyasa/sangh/session.ex to see the schema. The changeset is the one that shows how the creation works.

{:ok, session} =
  %{id: Ecto.UUID.generate()}
  |> Vyasa.Sangh.create_session()
```

#### Creating Text

```elixir
{:ok, text} = %{title: "gita"} |> Vyasa.Written.create_text()
```

#### Creating Comments

```elixir
%{
  id: Ecto.UUID.generate(),
  type: "null",
  body: "My Comment Body",
  session_id: session.id
}
|> Vyasa.Sangh.create_comment()
```
